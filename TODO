* Remove "QDomDocument* doc" param from all *::loadXML functions not using it.

* "Delete something" and "Remove something" are used here and there,
   without consistency. Pick either one and update all dialogs to use
   the same term. i.e. "Do you want to delete/remove these fixtures?"

* Change Function classes' copyFrom() contents to copy constructors.

* Editor dialogs should put an asterisk (*) after the title to signify
  modified state when appropriate: "<Editor name> - <Edited object>(*)"
  e.g. "EFXEditor - New EFX*"

* AssignHotKey, AssignSliderHotkey, KeyBind, SliderKeyBind
	-> Change them to something faster and rational

* Put back old shortcut keys (application menus)

* Rename BusProperties to BusManager
* Enable BusManager item renaming (i.e. remove QInputDialog)
* Change Bus concept so that everybody can just connect() to buses.

* Rename DMXMapEditor to OutputManager

* FunctionCollection::stop() stops all of its member functions, regardless of
  whether they have been started by the collection or some other (user,chaser,
  another collection). Should be fixed somehow, if possible.

* Preview point array away from EFX and into EFXEditor

* Should Fixture inherit QLCFixtureDef? Would it be nicer, are there any
  benefits?

* FixtureManager::loader()
* Removal of multiple fixtures from FixtureManager should be easier. Maybe
  multiple selection?
* FixtureManager's automatic function generation should be made smarter and
  incorporated into FunctionManager. So that user can select, which groups
  of functions to generate etc.. NEEDS MORE SPECS.
* Automatic fixture address assignment to fixture manager, to find the
  next adequate address space for selected fixture(s).
* Multiple selection to fixture manager.

* FunctionManager shortcut keys
* Check that FunctionManager tracks bus name changes correctly
* FunctionManager::addFunction() -> check function creation failure when
  maximum number of functions is reached.

* Monitor saving/loading doesn't work. Geometry, font, update speed, universe.
* Multiple monitors for different universes?
* Monitor scrolling - so that the display doesn't always start from channel 1
* Monitor drawing should be optimized so that slotTimeout() updates only
  values and not labels at all, since they dont change unless something
  passes over them (like another window).

* Tooltips to ALL widgets.

* VC* widgets to use input mapping: BIG TODO

* HTP channels to DMXMap. Maybe limit the number, since they are needed
  only for dimmer fixtures. Or bind somehow to the generic fixture def.

* Change VCWidget's moving threshold checks to use QPoint::manhattanLength()

* Add message boxes to all editor windows to indicate if there are no
  fixtures or functions, whichever is appropriate.
  -> XYPad crashes if there are no fixtures.

* Some way of printing an address map to printer to help fixture patching.
* Graphical view of stage and fixture layout. Plain top view will do for now.
* Fixture type icons (head, scanner and also: 6-bar, 12-bar etc. for dimmers)
* Gobo icons (from vendor's websites)

* VCSliderProperties & VCSlider value display style setting doesn't work.

* VCXYPadProperties - possibility to add/select/edit multiple channels

* Cut, copy paste to virtual console

* Move the contents of Function::setBus() to subclasses and leave only the
  common parts.

* Connect chaser & collection functions to doc::functionRemoved so that 
   function associations can be removed.

* Change XYPad properties dialog to make use of Pan&Tilt group information.
   Change the layout to contain one tree widget, from which the user can
   select (with checkable/radio items), which channels belong to X axis,
   which to Y axis or not at all. Maybe also belong to both axes, for some 
   weird pseudocreative dimmer applications??
